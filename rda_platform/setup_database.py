# setup_database.py

import sqlite3

# --- Документация ---
# Этот скрипт создает базу данных SQLite с именем 'rda.db' и таблицу 'tasks'.
# Таблица 'tasks' предназначена для хранения практических заданий по физике.
# Поля таблицы:
#   id: Уникальный идентификатор (автоматически увеличивается).
#   topic: Тема задания (например, "Кинематика", "Динамика").
#   question: Текст вопроса.
#   answer: Правильный ответ на вопрос.
#
# Запустите этот скрипт ОДИН РАЗ перед первым запуском основного приложения,
# чтобы создать и наполнить базу данных.
# --- Конец документации ---

# Подключаемся к базе данных (если ее нет, она будет создана)
connection = sqlite3.connect('rda.db')
cursor = connection.cursor()

# Создаем таблицу 'tasks', если она еще не существует
cursor.execute('''
    CREATE TABLE IF NOT EXISTS tasks (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        topic TEXT NOT NULL,
        question TEXT NOT NULL,
        answer TEXT NOT NULL
    )
''')

# Список заданий для первоначального заполнения
initial_tasks = [
    (
        "Кинематика",
        "Автомобиль начинает движение из состояния покоя и движется с постоянным ускорением 2 м/с². Какой путь он пройдет за первые 5 секунд?",
        "S = v₀t + (at²)/2. Поскольку v₀ = 0, S = (2 * 5²)/2 = 25 метров."
    ),
    (
        "Динамика",
        "На тело массой 10 кг действует сила 50 Н. Какое ускорение приобретает тело?",
        "По второму закону Ньютона: F = ma. Отсюда a = F/m = 50 Н / 10 кг = 5 м/с²."
    ),
    (
        "Законы сохранения",
        "Тело массой 2 кг движется со скоростью 4 м/с. Чему равен его импульс?",
        "Импульс (p) рассчитывается по формуле p = mv. p = 2 кг * 4 м/с = 8 кг·м/с."
    ),
    (
        "Термодинамика",
        "Какое количество теплоты необходимо, чтобы нагреть 1 кг воды от 20°C до 100°C? Удельная теплоемкость воды c = 4200 Дж/(кг·°C).",
        "Q = cmΔT. ΔT = 100°C - 20°C = 80°C. Q = 4200 * 1 * 80 = 336000 Дж или 336 кДж."
    )
]

# Добавляем задания в базу данных
# cursor.executemany вставляет сразу несколько записей
cursor.executemany('INSERT INTO tasks (topic, question, answer) VALUES (?, ?, ?)', initial_tasks)

# Сохраняем изменения и закрываем соединение
connection.commit()
connection.close()

print("База данных 'rda.db' успешно создана и заполнена начальными данными.")